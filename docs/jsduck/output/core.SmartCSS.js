Ext.data.JsonP.core_SmartCSS({"tagname":"class","name":"core.SmartCSS","autodetected":{},"files":[{"filename":"SmartCSS.js","href":"SmartCSS.html#core-SmartCSS"}],"params":[{"tagname":"params","type":"Object","name":"options","doc":"\n","properties":[{"tagname":"params","type":"Boolean","name":"prefixClassId","default":"true","optional":true,"doc":"<p>Prefixes all style ids with the style name.\n       For example if you you set this to true the class names\n       generated will have the prefix the style name and then\n       the id.</p>\n","html_type":"Boolean"}],"html_type":"Object"}],"members":[{"name":"","tagname":"property","owner":"core.SmartCSS","id":"property-","meta":{}},{"name":"__styleClasses","tagname":"property","owner":"core.SmartCSS","id":"property-__styleClasses","meta":{"private":true}},{"name":"","tagname":"method","owner":"core.SmartCSS","id":"method-","meta":{"private":true}},{"name":"__registerContext","tagname":"method","owner":"core.SmartCSS","id":"method-__registerContext","meta":{"private":true}},{"name":"getClass","tagname":"method","owner":"core.SmartCSS","id":"method-getClass","meta":{}},{"name":"getClasses","tagname":"method","owner":"core.SmartCSS","id":"method-getClasses","meta":{}},{"name":"setClass","tagname":"method","owner":"core.SmartCSS","id":"method-setClass","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-core.SmartCSS","short_doc":"An utility class which can be used to save CSS styles\nand get their id. ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/SmartCSS.html#core-SmartCSS' target='_blank'>SmartCSS.js</a></div></pre><div class='doc-contents'><p>An utility class which can be used to save CSS styles\nand get their id. Use an instance per module.</p>\n\n<p>Definitions:\n - Class id: is the name in smart-css, normally is semantic and needs context; A class\n             id only matters if has a SmartCSS instance associated. Alone means nothing.\n - Class name: is the real css class, normally is ugly and short; Doesn't include the pseudo\n               part or the dot prefix.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : Object<div class='sub-desc'>\n<ul><li><span class='pre'>prefixClassId</span> : Boolean (optional)<div class='sub-desc'><p>Prefixes all style ids with the style name.\n       For example if you you set this to true the class names\n       generated will have the prefix the style name and then\n       the id.</p>\n<p>Defaults to: <code>true</code></p></div></li></ul></div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='core.SmartCSS'>core.SmartCSS</span><br/><a href='source/SmartCSS.html#core-SmartCSS-property-' target='_blank' class='view-source'>view source</a></div><a href='#!/api/core.SmartCSS-property-' class='name expandable'></a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Renders a css header definition from the selectorObject\nand a classMap. ...</div><div class='long'><p>Renders a css header definition from the selectorObject\nand a classMap. The classMap is needed to replace the class\nnames from the selectorObject.</p>\n</div></div></div><div id='property-__styleClasses' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='core.SmartCSS'>core.SmartCSS</span><br/><a href='source/SmartCSS.html#core-SmartCSS-property-__styleClasses' target='_blank' class='view-source'>view source</a></div><a href='#!/api/core.SmartCSS-property-__styleClasses' class='name expandable'>__styleClasses</a> : Object<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>The key is the styleName and the value is an object like this:\n{className: 'String', style: {color: 'red'}} ...</div><div class='long'><p>The key is the styleName and the value is an object like this:\n<code>{className: 'String', style: {color: 'red'}}</code></p>\n<p>Defaults to: <code>{}</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='core.SmartCSS'>core.SmartCSS</span><br/><a href='source/SmartCSS.html#core-SmartCSS-method-' target='_blank' class='view-source'>view source</a></div><a href='#!/api/core.SmartCSS-method-' class='name expandable'></a>( <span class='pre'></span> ) : String<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Gets a new id. ...</div><div class='long'><p>Gets a new id. Is a singleton therefore it will always be different.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-__registerContext' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='core.SmartCSS'>core.SmartCSS</span><br/><a href='source/SmartCSS.html#core-SmartCSS-method-__registerContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/core.SmartCSS-method-__registerContext' class='name expandable'>__registerContext</a>( <span class='pre'>context</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Register a context. ...</div><div class='long'><p>Register a context.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : <a href=\"#!/api/core.SmartCSS\" rel=\"core.SmartCSS\" class=\"docClass\">core.SmartCSS</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getClass' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='core.SmartCSS'>core.SmartCSS</span><br/><a href='source/SmartCSS.html#core-SmartCSS-method-getClass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/core.SmartCSS-method-getClass' class='name expandable'>getClass</a>( <span class='pre'>styleName</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the style id of a style name. ...</div><div class='long'><p>Gets the style id of a style name.\nDon't add any pseudo things. For example if you set a class like this:</p>\n\n<pre><code>setClass('myClass:hover', ...);\n</code></pre>\n\n<p>In order to get the className you do:</p>\n\n<pre><code>getClass('myClass');\n</code></pre>\n\n<p>And not</p>\n\n<pre><code>getClass('myClass:hover');\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>styleName</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The class id. This is the real class that is attached to the DOM.</p>\n</div></li></ul></div></div></div><div id='method-getClasses' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='core.SmartCSS'>core.SmartCSS</span><br/><a href='source/SmartCSS.html#core-SmartCSS-method-getClasses' target='_blank' class='view-source'>view source</a></div><a href='#!/api/core.SmartCSS-method-getClasses' class='name expandable'>getClasses</a>( <span class='pre'>styleNames, [asArray]</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns multiple classes. ...</div><div class='long'><p>Returns multiple classes.\nExample:</p>\n\n<pre><code>css.getClasses({\n    a: true,\n    b: false,\n    c: true,\n});\n// Will return a string with the class for `a` and `b` only.\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>styleNames</span> : Object<div class='sub-desc'><p>Example {returnThisClass: true, dontReturnThisClass: false}</p>\n</div></li><li><span class='pre'>asArray</span> : Boolean (optional)<div class='sub-desc'><p>If true returns an array, if not returns a string.</p>\n<p>Defaults to: <code>true</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The classes' ids. These are the real classes that are attached to the DOM.</p>\n</div></li></ul></div></div></div><div id='method-setClass' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='core.SmartCSS'>core.SmartCSS</span><br/><a href='source/SmartCSS.html#core-SmartCSS-method-setClass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/core.SmartCSS-method-setClass' class='name expandable'>setClass</a>( <span class='pre'>name, def, options</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Defines a style. ...</div><div class='long'><p>Defines a style.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The style name, then you can get the style id with <code>getClass</code> or <code>getClasses</code>.</p>\n</div></li><li><span class='pre'>def</span> : Object<div class='sub-desc'><p>The style definition <code>{color: 'red'}</code> as javascript object.</p>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'>\n<ul><li><span class='pre'>className</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>hover</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>media</span> : String<div class='sub-desc'>\n</div></li></ul></div></li></ul></div></div></div></div></div></div></div>","meta":{}});